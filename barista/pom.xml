<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.3.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>de.fabiankrueger.scc</groupId>
    <artifactId>barista</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>barista</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>8</java.version>
        <spring-cloud.version>Hoxton.SR7</spring-cloud.version>
    </properties>

    <dependencies>
        <!-- spring cloud contract: consumer -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-contract-stub-runner</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- spring cloud contract: producer -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-contract-verifier</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- messaging: Kafka -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream-binder-kafka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>
        <!-- messaging test: async -->
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>4.0.1</version>
            <scope>test</scope>
        </dependency>
        <!-- messaging test: test binder -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream-test-support</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- messaging: EmbeddedKafka -->
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- spring boot test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-contract-maven-plugin</artifactId>
                <version>2.2.4.RELEASE</version>
                <extensions>true</extensions>
                <configuration>
                    <testFramework>JUNIT5</testFramework>
                    <!-- single base class for all tests
                            https://docs.spring.io/spring-cloud-contract/docs/2.2.4.RELEASE/reference/htmlsingle/#maven-single-base
                    -->
                    <!-- baseClassForTests>de.fabiankrueger.scc.barista.baseclasses.OrderPreparedBase</baseClassForTests -->

                    <!-- base class by convention
                            https://docs.spring.io/spring-cloud-contract/docs/2.2.4.RELEASE/reference/htmlsingle/#by-convention

                            scc looks for base classes in package defined in <packageWithBaseClasses> and expects base classes to follow the pattern:
                            "take the last two packages 'order' and 'prepared' of the contract as prefix for the base class".

                            src/test/resources/contracts/order/prepared/publish-order-prepared-event.groovy => uses base class OrderPreparedBase

                            This rule takes precedence over baseClassForTests
                    -->
                    <packageWithBaseClasses>de.fabiankrueger.scc.barista.baseclasses</packageWithBaseClasses>

                    <!-- You can use <basePackageForTests> to explicitly define the base package for the generated tests -->
                    <basePackageForTests>de.fabiankrueger.scc.barista</basePackageForTests>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
