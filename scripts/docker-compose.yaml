version: '3.7'

services:

  customer:
    image: customer:1.0-SNAPSHOT
#    build: ./customer
    #    labels:
    #      filebeat_enable:
#    networks:
#      - coffeeshop
    ports:
      - "8080:8080"
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
    depends_on:
      - kafka

  cashier:
    image: cashier:1.0-SNAPSHOT
#    build: ./cashier
    #    labels:
    #      filebeat_enable:
    ports:
      - "8083:8083"
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
#
  barista:
    image: barista:1.0-SNAPSHOT
#    labels:
#      filebeat_enable:
#    networks:
#      - coffeeshop
    ports:
      - "8082:8082"
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
    depends_on:
      - kafka

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9091:9091
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

#  zookeeper:
#    image: wurstmeister/zookeeper
##    networks:
##      - coffeeshop
#    ports:
#      - "2181:2181"
#  kafka:
#    image: wurstmeister/kafka
##    networks:
##      - coffeeshop
#    command: [start-kafka.sh]
#    ports:
#      - "9092:9092"
#    hostname: kafka
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#      KAFKA_CREATE_TOPICS: "orders-placed:1:1,orders-prepared:1:1"
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock

#networks:
#  coffeeshop:
#    driver: "bridge"


